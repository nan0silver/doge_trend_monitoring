name: 자동 모니터링 및 배포

on:
  workflow_dispatch:
  schedule:
    - cron: "0 0 1 * *"
jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pages: write
      id-token: write
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: 저장소에 있는 파일 불러오기
        uses: actions/checkout@v4
      - name: Setup Java 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: "17"
      - name: 디렉토리 생성
        run: |
          mkdir -p _posts
          mkdir -p images
      - name: Compile and Run code
        run: |
          javac -d . *.java
          java App
        env:
          KEYWORD: ${{ vars.KEYWORD }}
          NAVER_CLIENT_ID: ${{ secrets.NAVER_CLIENT_ID }}
          NAVER_CLIENT_SECRET: ${{ secrets.NAVER_CLIENT_SECRET }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          REPO_PATH: ${{ github.workspace }}
      - name: 현재 날짜 설정
        id: date
        run: echo "TODAY=$(date +'%Y-%m-%d %H:%M')" >> $GITHUB_ENV
      - name: 실행 결과로 나온 파일을 커밋
        uses: EndBug/add-and-commit@v9
        with:
          author_name: ${{ github.actor }}
          author_email: ${{ github.actor }}@users.noreply.github.com
          message: "feat : 모니터링 파일 저장 (${{ env.TODAY }})"
          add: "."
      - name: Debug - Check files before Jekyll build
        run: |
          ls -la
          echo "=== Content of _posts ==="
          ls -la _posts || echo "No _posts directory or empty"
      - name: Setup Jekyll
        uses: actions/jekyll-build-pages@v1
        with:
          source: ./
          destination: ./_site
      - name: Debug - Check _site directory
        run: |
          ls -la || echo "Cannot access directory"
          echo "=== Listing root directory ==="
          find . -maxdepth 1 -type d | sort
      - name: Deploy to GitHub Pages
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          folder: _site # 빌드된 파일들이 있는 폴더
          branch: gh-pages # 배포할 브랜치
